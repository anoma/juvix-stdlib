module Stdlib.Data.Monad;

import Stdlib.Data.Fixity open;
import Stdlib.Data.Functor open;
import Stdlib.Data.Applicative open;

trait
type Monad (f : Type -> Type) :=
  mMonad {
    applicative : Applicative f;
    syntax operator >>= seq;
    >>= : {A B : Type} -> f A -> (A -> f B) -> f B;
  };

open Monad public;
