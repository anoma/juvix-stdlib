module Stdlib.Data.Nat;

import Stdlib.Data.Nat.Base open public;
import Stdlib.Data.String.Base open;

import Stdlib.Trait.Eq as Eq;
open Eq using {Eq};

import Stdlib.Trait.Ord as Ord;
open Ord using {Ord};

import Stdlib.Trait.Show as Show;
open Show using {Show};

import Stdlib.Data.Nat.Ord as Nat;

--- Converts a ;Nat; into a ;String;.
builtin nat-to-string
axiom natToString : Nat -> String;

--- Partial function that converts a ;String; into a ;Nat;.
builtin string-to-nat
axiom stringToNat : String -> Nat;

module NatTraits;
  Eq : Eq.Eq Nat := Eq.mkEq (Nat.==);

  Ord : Ord.Ord Nat := Ord.mkOrd Nat.compare;

  Show : Show.Show Nat := Show.mkShow natToString;
end;
